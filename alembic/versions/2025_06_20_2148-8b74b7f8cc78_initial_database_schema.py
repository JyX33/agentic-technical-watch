"""Initial database schema

Revision ID: 8b74b7f8cc78
Revises:
Create Date: 2025-06-20 21:48:26.895836

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op
from reddit_watcher.models import JSONType

# revision identifiers, used by Alembic.
revision: str = "8b74b7f8cc78"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "a2a_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=36), nullable=False),
        sa.Column("agent_type", sa.String(length=100), nullable=False),
        sa.Column("skill_name", sa.String(length=100), nullable=False),
        sa.Column("parameters", JSONType(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.String(length=100), nullable=True),
        sa.Column("parent_task_id", sa.String(length=100), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_id"),
    )
    op.create_table(
        "a2a_workflows",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.String(length=100), nullable=False),
        sa.Column("workflow_type", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("schedule", sa.String(length=100), nullable=True),
        sa.Column("config", JSONType(), nullable=False),
        sa.Column("last_run", sa.DateTime(timezone=True), nullable=True),
        sa.Column("next_run", sa.DateTime(timezone=True), nullable=True),
        sa.Column("run_count", sa.Integer(), nullable=False),
        sa.Column("error_count", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("workflow_id"),
    )
    op.create_table(
        "alert_batches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.String(length=100), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("total_items", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("channels", JSONType(), nullable=False),
        sa.Column("schedule_type", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SENT", "FAILED", name="alertstatus"),
            nullable=False,
        ),
        sa.Column("sent_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("delivery_attempts", sa.Integer(), nullable=False),
        sa.Column("last_error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("batch_id"),
    )
    op.create_table(
        "subreddits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("subscribers", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "discovered_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_checked", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "alert_deliveries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("alert_batch_id", sa.Integer(), nullable=False),
        sa.Column("channel", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SENT", "FAILED", name="alertstatus"),
            nullable=False,
        ),
        sa.Column("recipient", sa.String(length=200), nullable=True),
        sa.Column("webhook_url", sa.String(length=500), nullable=True),
        sa.Column("message_id", sa.String(length=200), nullable=True),
        sa.Column("sent_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("delivery_time_ms", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["alert_batch_id"],
            ["alert_batches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reddit_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reddit_id", sa.String(length=20), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("url", sa.String(length=2000), nullable=True),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("upvote_ratio", sa.Float(), nullable=True),
        sa.Column("num_comments", sa.Integer(), nullable=False),
        sa.Column("created_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "retrieved_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("subreddit_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subreddit_id"],
            ["subreddits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("reddit_id"),
    )
    op.create_table(
        "reddit_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("reddit_id", sa.String(length=20), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("is_submitter", sa.Boolean(), nullable=False),
        sa.Column("created_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "retrieved_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("post_id", sa.Integer(), nullable=True),
        sa.Column("subreddit_id", sa.Integer(), nullable=False),
        sa.Column("parent_comment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_comment_id"],
            ["reddit_comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["subreddit_id"],
            ["subreddits.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("reddit_id"),
    )
    op.create_table(
        "content_filters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("relevance_score", sa.Float(), nullable=False),
        sa.Column("is_relevant", sa.Boolean(), nullable=False),
        sa.Column("keywords_matched", JSONType(), nullable=False),
        sa.Column("semantic_similarity", sa.Float(), nullable=True),
        sa.Column("filter_reason", sa.String(length=500), nullable=True),
        sa.Column(
            "processed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("post_id", sa.Integer(), nullable=True),
        sa.Column("comment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"],
            ["reddit_comments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["reddit_posts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "content_summaries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("summary_text", sa.Text(), nullable=False),
        sa.Column("key_points", JSONType(), nullable=False),
        sa.Column("sentiment", sa.String(length=50), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("model_used", sa.String(length=100), nullable=False),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("content_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["content_filter_id"],
            ["content_filters.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("content_summaries")
    op.drop_table("content_filters")
    op.drop_table("reddit_comments")
    op.drop_table("reddit_posts")
    op.drop_table("alert_deliveries")
    op.drop_table("subreddits")
    op.drop_table("alert_batches")
    op.drop_table("a2a_workflows")
    op.drop_table("a2a_tasks")
    # ### end Alembic commands ###
