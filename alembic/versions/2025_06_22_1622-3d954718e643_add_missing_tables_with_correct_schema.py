"""add_missing_tables_with_correct_schema

Revision ID: 3d954718e643
Revises: e8a9c7d4b5f6
Create Date: 2025-06-22 16:22:46.918531

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op
from reddit_watcher.models import JSONType

# revision identifiers, used by Alembic.
revision: str = "3d954718e643"
down_revision: str | Sequence[str] | None = "e8a9c7d4b5f6"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "a2a_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=36), nullable=False),
        sa.Column("agent_type", sa.String(length=100), nullable=False),
        sa.Column("skill_name", sa.String(length=100), nullable=False),
        sa.Column("parameters", JSONType(), nullable=False),
        sa.Column("parameters_hash", sa.String(length=64), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("idempotency_key", sa.String(length=100), nullable=True),
        sa.Column("correlation_id", sa.String(length=100), nullable=True),
        sa.Column("content_hash", sa.String(length=64), nullable=True),
        sa.Column("lock_token", sa.String(length=100), nullable=True),
        sa.Column("lock_expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column("max_retries", sa.Integer(), nullable=False),
        sa.Column("next_retry_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("workflow_id", sa.String(length=100), nullable=True),
        sa.Column("parent_task_id", sa.String(length=100), nullable=True),
        sa.Column("result_data", JSONType(), nullable=True),
        sa.Column("result_hash", sa.String(length=64), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "agent_type",
            "skill_name",
            "parameters_hash",
            "workflow_id",
            name="uix_a2a_tasks_idempotency",
        ),
        sa.UniqueConstraint("task_id"),
        sa.UniqueConstraint("task_id", name="uix_a2a_tasks_task_id"),
    )
    op.create_index(
        "ix_a2a_tasks_status_created",
        "a2a_tasks",
        ["status", "created_at"],
        unique=False,
    )
    op.create_index(
        "ix_a2a_tasks_workflow_status",
        "a2a_tasks",
        ["workflow_id", "status"],
        unique=False,
    )
    op.create_table(
        "a2a_workflows",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.String(length=100), nullable=False),
        sa.Column("workflow_type", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="taskstatus",
            ),
            nullable=False,
        ),
        sa.Column("schedule", sa.String(length=100), nullable=True),
        sa.Column("config", JSONType(), nullable=False),
        sa.Column("last_run", sa.DateTime(timezone=True), nullable=True),
        sa.Column("next_run", sa.DateTime(timezone=True), nullable=True),
        sa.Column("run_count", sa.Integer(), nullable=False),
        sa.Column("error_count", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("workflow_id"),
    )
    op.create_table(
        "agent_states",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("agent_id", sa.String(length=100), nullable=False),
        sa.Column("agent_type", sa.String(length=100), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("state_data", JSONType(), nullable=False),
        sa.Column("capabilities", JSONType(), nullable=False),
        sa.Column("current_task_id", sa.String(length=36), nullable=True),
        sa.Column(
            "heartbeat_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("error_count", sa.Integer(), nullable=False),
        sa.Column("last_error", sa.Text(), nullable=True),
        sa.Column("tasks_completed", sa.Integer(), nullable=False),
        sa.Column("tasks_failed", sa.Integer(), nullable=False),
        sa.Column("avg_execution_time_ms", sa.Float(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "last_updated",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("agent_id"),
        sa.UniqueConstraint("agent_id", name="uix_agent_states_agent_id"),
    )
    op.create_index(
        "ix_agent_states_status_updated",
        "agent_states",
        ["status", "last_updated"],
        unique=False,
    )
    op.create_table(
        "agent_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("workflow_id", sa.Integer(), nullable=False),
        sa.Column("agent_type", sa.String(length=100), nullable=False),
        sa.Column("task_type", sa.String(length=100), nullable=False),
        sa.Column("task_data", JSONType(), nullable=False),
        sa.Column("result_data", JSONType(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "alert_batches",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("batch_id", sa.String(length=100), nullable=False),
        sa.Column("title", sa.String(length=200), nullable=False),
        sa.Column("summary", sa.Text(), nullable=False),
        sa.Column("total_items", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("channels", JSONType(), nullable=False),
        sa.Column("schedule_type", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SENT", "FAILED", name="alertstatus"),
            nullable=False,
        ),
        sa.Column("sent_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("delivery_attempts", sa.Integer(), nullable=False),
        sa.Column("last_error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("batch_id"),
    )
    op.create_table(
        "content_deduplication",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content_hash", sa.String(length=64), nullable=False),
        sa.Column(
            "content_type",
            sa.Enum("POST", "COMMENT", "SUBREDDIT", name="contenttype"),
            nullable=False,
        ),
        sa.Column("external_id", sa.String(length=100), nullable=False),
        sa.Column("processing_status", sa.String(length=50), nullable=False),
        sa.Column(
            "first_seen_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("processed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("source_agent", sa.String(length=100), nullable=True),
        sa.Column("workflow_id", sa.String(length=100), nullable=True),
        sa.Column("extra_data", JSONType(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("content_hash"),
        sa.UniqueConstraint("content_hash", name="uix_content_deduplication_hash"),
        sa.UniqueConstraint(
            "content_type", "external_id", name="uix_content_deduplication_external"
        ),
    )
    op.create_index(
        "ix_content_deduplication_type_processed",
        "content_deduplication",
        ["content_type", "processed_at"],
        unique=False,
    )
    op.create_table(
        "subreddits",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("subscribers", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "discovered_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("last_checked", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "task_recoveries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.String(length=36), nullable=False),
        sa.Column("original_task_id", sa.String(length=36), nullable=False),
        sa.Column("recovery_status", sa.String(length=50), nullable=False),
        sa.Column("recovery_strategy", sa.String(length=100), nullable=False),
        sa.Column("recovery_attempt", sa.Integer(), nullable=False),
        sa.Column("max_recovery_attempts", sa.Integer(), nullable=False),
        sa.Column("checkpoint_data", JSONType(), nullable=True),
        sa.Column("recovery_parameters", JSONType(), nullable=True),
        sa.Column("failure_reason", sa.Text(), nullable=True),
        sa.Column("recovery_started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("recovery_completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("recovery_error", sa.Text(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("task_id"),
        sa.UniqueConstraint("task_id", name="uix_task_recoveries_task_id"),
    )
    op.create_index(
        "ix_task_recoveries_status_created",
        "task_recoveries",
        ["recovery_status", "created_at"],
        unique=False,
    )
    op.create_table(
        "workflow_executions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("topics", JSONType(), nullable=False),
        sa.Column("subreddits", JSONType(), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("posts_processed", sa.Integer(), nullable=True),
        sa.Column("comments_processed", sa.Integer(), nullable=True),
        sa.Column("relevant_items", sa.Integer(), nullable=True),
        sa.Column("summaries_created", sa.Integer(), nullable=True),
        sa.Column("alerts_sent", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column(
            "started_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("completed_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "alert_deliveries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("alert_batch_id", sa.Integer(), nullable=False),
        sa.Column("channel", sa.String(length=50), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SENT", "FAILED", name="alertstatus"),
            nullable=False,
        ),
        sa.Column("recipient", sa.String(length=200), nullable=True),
        sa.Column("webhook_url", sa.String(length=500), nullable=True),
        sa.Column("message_id", sa.String(length=200), nullable=True),
        sa.Column("sent_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("delivery_time_ms", sa.Integer(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_count", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["alert_batch_id"], ["alert_batches.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "alert_batch_id",
            "channel",
            "recipient",
            name="uix_alert_deliveries_idempotency",
        ),
    )
    op.create_index(
        "ix_alert_deliveries_status_created",
        "alert_deliveries",
        ["status", "created_at"],
        unique=False,
    )
    op.create_table(
        "reddit_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.String(length=20), nullable=False),
        sa.Column("title", sa.String(length=500), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("url", sa.String(length=2000), nullable=True),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("subreddit", sa.String(length=100), nullable=False),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("upvote_ratio", sa.Float(), nullable=True),
        sa.Column("num_comments", sa.Integer(), nullable=False),
        sa.Column("is_self", sa.Boolean(), nullable=False),
        sa.Column("is_video", sa.Boolean(), nullable=False),
        sa.Column("over_18", sa.Boolean(), nullable=False),
        sa.Column("permalink", sa.String(length=500), nullable=True),
        sa.Column("topic", sa.String(length=200), nullable=True),
        sa.Column("created_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("subreddit_fk_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["subreddit_fk_id"], ["subreddits.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("post_id"),
    )
    op.create_table(
        "reddit_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("comment_id", sa.String(length=20), nullable=False),
        sa.Column("post_id", sa.String(length=20), nullable=False),
        sa.Column("body", sa.Text(), nullable=False),
        sa.Column("author", sa.String(length=100), nullable=True),
        sa.Column("score", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.String(length=20), nullable=True),
        sa.Column("permalink", sa.String(length=500), nullable=True),
        sa.Column("is_submitter", sa.Boolean(), nullable=False),
        sa.Column("created_utc", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "retrieved_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("post_fk_id", sa.Integer(), nullable=True),
        sa.Column("subreddit_fk_id", sa.Integer(), nullable=True),
        sa.Column("parent_comment_fk_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_comment_fk_id"], ["reddit_comments.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["post_fk_id"], ["reddit_posts.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["subreddit_fk_id"], ["subreddits.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("comment_id"),
    )
    op.create_table(
        "content_filters",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("relevance_score", sa.Float(), nullable=False),
        sa.Column("is_relevant", sa.Boolean(), nullable=False),
        sa.Column("keywords_matched", JSONType(), nullable=False),
        sa.Column("semantic_similarity", sa.Float(), nullable=True),
        sa.Column("filter_reason", sa.String(length=500), nullable=True),
        sa.Column(
            "processed_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("post_id", sa.Integer(), nullable=True),
        sa.Column("comment_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["comment_id"], ["reddit_comments.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["post_id"], ["reddit_posts.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "content_summaries",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("summary_text", sa.Text(), nullable=False),
        sa.Column("key_points", JSONType(), nullable=False),
        sa.Column("sentiment", sa.String(length=50), nullable=True),
        sa.Column("confidence_score", sa.Float(), nullable=True),
        sa.Column("model_used", sa.String(length=100), nullable=False),
        sa.Column("processing_time_ms", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("content_filter_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["content_filter_id"], ["content_filters.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("content_summaries")
    op.drop_table("content_filters")
    op.drop_table("reddit_comments")
    op.drop_table("reddit_posts")
    op.drop_index("ix_alert_deliveries_status_created", table_name="alert_deliveries")
    op.drop_table("alert_deliveries")
    op.drop_table("workflow_executions")
    op.drop_index("ix_task_recoveries_status_created", table_name="task_recoveries")
    op.drop_table("task_recoveries")
    op.drop_table("subreddits")
    op.drop_index(
        "ix_content_deduplication_type_processed", table_name="content_deduplication"
    )
    op.drop_table("content_deduplication")
    op.drop_table("alert_batches")
    op.drop_table("agent_tasks")
    op.drop_index("ix_agent_states_status_updated", table_name="agent_states")
    op.drop_table("agent_states")
    op.drop_table("a2a_workflows")
    op.drop_index("ix_a2a_tasks_workflow_status", table_name="a2a_tasks")
    op.drop_index("ix_a2a_tasks_status_created", table_name="a2a_tasks")
    op.drop_table("a2a_tasks")
    # ### end Alembic commands ###
